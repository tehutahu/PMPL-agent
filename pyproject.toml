[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pmpl-agent-system"
dynamic = ["version"]
description = "PMPL エージェントシステム - プロダクトマネージャー・リーダーの課題議論・分析システム"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [
    { name = "PMPL Agent System", email = "info@pmpl-agent-system.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "strands-agents>=0.1.6",
    "langchain>=0.1.0",
    "pydantic>=2.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "jinja2>=3.1.0",
    "pyyaml>=6.0",
    "aiofiles>=23.0.0",
    "python-dotenv>=1.0.0",
    "openai>=1.0.0",
    "anthropic>=0.25.0",
    "structlog>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "anyio>=4.0.0",
    "ruff>=0.1.0",
    "pyright>=1.1.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/pmpl-agent-system/pmpl-agent-system"
Repository = "https://github.com/pmpl-agent-system/pmpl-agent-system"
Issues = "https://github.com/pmpl-agent-system/pmpl-agent-system/issues"

[project.scripts]
pmpl-agent = "pmpl_agent_system.cli:main"

[tool.hatch.version]
path = "src/pmpl_agent_system/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/pmpl_agent_system"]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.ruff.isort]
known-first-party = ["pmpl_agent_system"]

[tool.pyright]
include = ["src", "tests"]
exclude = ["**/__pycache__"]
pythonVersion = "3.11"
pythonPlatform = "Linux"
typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = false
reportPrivateUsage = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=pmpl_agent_system",
    "--cov-report=term-missing",
    "--cov-report=html:coverage/htmlcov",
    "--cov-report=xml:coverage/coverage.xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
data_file = "coverage/.coverage"
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@\\(abc\\.\\)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "coverage/htmlcov"

[tool.coverage.xml]
output = "coverage/coverage.xml" 